name: Rust

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

env:
  CARGO_TERM_COLOR: always

jobs:
  check:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        runtime: [async-std, tokio, actix]
        tls: [native-tls, rustls]
        db: [mssql, mysql, postgres, sqlite]
        pwd:
          - .
          - examples

    steps:
      - uses: actions/checkout@master
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          override: true
          profile: minimal
          components: clippy, rustfmt
      - uses: Swatinem/rust-cache@v2
        with:
          key: ${{ matrix.pwd }}
          workspaces: ${{ matrix.pwd }}
      - name: clippy
        working-directory: ${{ matrix.pwd }}
        run: |
          cargo clippy --all --all-targets --features runtime-${{ matrix.runtime }}-${{ matrix.tls }},${{ matrix.db }} -- -Dwarnings
      - name: rustfmt
        working-directory: ${{ matrix.pwd }}
        run: |
          cargo fmt --all -- --check

  check-docs:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        runtime: [async-std, tokio, actix]
        tls: [native-tls, rustls]
        db: [mssql, mysql, postgres, sqlite]

    steps:
      - uses: actions/checkout@master
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
          profile: minimal
      - uses: Swatinem/rust-cache@v2
      - name: cargo doc
        env:
          RUSTDOCFLAGS: "-D rustdoc::broken-intra-doc-links"
        run: cargo doc --features runtime-${{ matrix.runtime }}-${{ matrix.tls }},${{ matrix.db }} --no-deps

  test:
    needs: check

    runs-on: ubuntu-latest

    strategy:
      matrix:
        runtime: [async-std, tokio, actix]
        tls: [native-tls, rustls]
        db: [mssql, mysql, postgres, sqlite]

    steps:
      - uses: actions/checkout@master
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
          profile: minimal
      - name: Install Tarpaulin
        uses: actions-rs/install@v0.1
        with:
          crate: cargo-tarpaulin
          version: 0.22.0
          use-tool-cache: true
      - uses: Swatinem/rust-cache@v2
      - name: Run tests
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --all --features runtime-${{ matrix.runtime }}-${{ matrix.tls }},${{ matrix.db }} --all-targets
      - name: Coverage
        run: cargo tarpaulin --all --features runtime-${{ matrix.runtime }}-${{ matrix.tls }},${{ matrix.db }} --all-targets -o Lcov --output-dir ./coverage
      - name: Coveralls
        uses: coverallsapp/github-action@master
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}

  test-docs:
    needs: check

    runs-on: ubuntu-latest

    strategy:
      matrix:
        runtime: [async-std, tokio, actix]
        tls: [native-tls, rustls]
        db: [mssql, mysql, postgres, sqlite]

    steps:
      - uses: actions/checkout@master
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
          profile: minimal
      - uses: Swatinem/rust-cache@v2
      - name: Run doc tests
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --features runtime-${{ matrix.runtime }}-${{ matrix.tls }},${{ matrix.db }} --doc
